# Planning for COSC475

## Project Goals

- Make the project core portable across operating systems


## Storing Data

A single booking is identified by its:
- room id (1 - 3 digits)
- year (4 digits)
- month (2 digits)
- day (2 digits)
- hour (2 digits)
- minutes (2 digits)

The minutes can be compressed into [3, 0] which stands for 30 and 0 minutes respectively.

Hence, the following string would represent the 18th of August, 2pm in room 5:

	20200818140-005
	YYYYMMDDHHm-RRR

This produces a string which is 15 characters long (16 including a null terminator).


There are three types of bookings (nodes):

- directory nodes which store pointers to file nodes
- file nodes which store pointers to data nodes
- data nodes which store the actual file data

### Data Nodes:

Each data node has several properties:

- A magic string to identify the booking as being part of mrfs.
- The version number of MRFS it was created with.
- The type of node that it is (C for chunk)
- The file id of its parent.
- Its own chunk number.
- The checksum of its chunk data.
- Its chunk data (2400 characters = 1800 bytes).

The magic string, file id, chunk number, and checksum are stored in the name field.

	MRFS-1-C;20200818140-005;23;FA

The data is stored in the description field in base64 format. 
Every 80 characters are seperated by a newline when the chunk is created.
These are converted into <br> html line breaks when the data is read back.
This will make it look nice.

The chunk data is stored in the full description field.

The owner of the chunk is stored elsewhere in the page.

### File Nodes:

Each file node has several properties:
- A magic string to identify the booking as being a mrfs file node.
- The number of chunks that belong to this node.
- The file node status.
- The list of node chunks including booking ids, chunk number, and hash.
